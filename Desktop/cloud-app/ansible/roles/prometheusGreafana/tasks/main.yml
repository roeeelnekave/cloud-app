- name: Install prerequisites for Grafana
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: present
    update_cache: yes
  become: true

- name: Create prometheus group
  ansible.builtin.group:
    name: prometheus
    system: yes

- name: Create prometheus user
  ansible.builtin.user:
    name: prometheus
    system: yes
    group: prometheus
    shell: /sbin/nologin

- name: Download Prometheus tarball
  ansible.builtin.get_url:
    url: https://github.com/prometheus/prometheus/releases/download/v2.43.0/prometheus-2.43.0.linux-amd64.tar.gz
    dest: /tmp/prometheus.tar.gz

- name: Extract Prometheus tarball
  ansible.builtin.unarchive:
    src: /tmp/prometheus.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Move Prometheus binaries
  ansible.builtin.command: mv /tmp/prometheus-2.43.0.linux-amd64/{prometheus,promtool} /usr/local/bin/
  args:
    creates: /usr/local/bin/prometheus

- name: Change ownership of Prometheus binaries
  ansible.builtin.file:
    path: /usr/local/bin/{{ item }}
    owner: prometheus
    group: prometheus
    mode: '0755'
  loop:
    - prometheus
    - promtool

- name: Move Prometheus configuration directories
  ansible.builtin.command: mv /tmp/prometheus-2.43.0.linux-amd64/{consoles,console_libraries,prometheus.yml} /etc/prometheus/
  args:
    creates: /etc/prometheus/prometheus.yml

- name: Change ownership of Prometheus directories
  ansible.builtin.file:
    path: /etc/prometheus
    owner: prometheus
    group: prometheus
    recurse: yes

- name: Create Prometheus systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=prometheus
      Group=prometheus
      Type=simple
      ExecStart=/usr/local/bin/prometheus \
          --config.file /etc/prometheus/prometheus.yml \
          --storage.tsdb.path /var/lib/prometheus/ \
          --web.console.templates=/etc/prometheus/consoles \
          --web.console.libraries=/etc/prometheus/console_libraries

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: yes
    state: started

- name: Allow Prometheus port on firewall
  ansible.builtin.ufw:
    rule: allow
    port: 9090
    proto: tcp

- name: Create directory for Grafana keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings/
    state: directory
    mode: '0755'

- name: Download Grafana GPG key and save as dearmored
  ansible.builtin.command: wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /etc/apt/keyrings/grafana.gpg
  args:
    creates: /etc/apt/keyrings/grafana.gpg

- name: Add Grafana repositories
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main"
    filename: grafana
    state: present

- name: Add Grafana beta repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com beta main"
    filename: grafana-beta
    state: present

- name: Update apt cache for Grafana
  ansible.builtin.apt:
    update_cache: yes

- name: Install Grafana OSS
  ansible.builtin.apt:
    name: grafana
    state: present

- name: Install Grafana Enterprise
  ansible.builtin.apt:
    name: grafana-enterprise
    state: present

- name: Enable and start Grafana service
  ansible.builtin.systemd:
    name: grafana-server
    enabled: yes
    state: started
